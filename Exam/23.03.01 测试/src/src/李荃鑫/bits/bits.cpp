#include<bits/stdc++.h>

using namespace std;

#define int long long

inline int read(){
	int x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}
	return x*f;
}
int ans[32][32]={{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,3,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,4,10,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,5,15,25,30,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,6,21,41,56,62,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,7,28,63,98,119,126,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,8,36,92,162,218,246,254,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,9,45,129,255,381,465,501,510,511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,10,55,175,385,637,847,967,1012,1022,1023,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,11,66,231,561,1023,1485,1815,1980,2035,2046,2047,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,12,78,298,793,1585,2509,3301,3796,4016,4082,4094,4095,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,13,91,377,1092,2379,4095,5811,7098,7813,8099,8177,8190,8191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,14,105,469,1470,3472,6475,9907,12910,14912,15913,16277,16368,16382,16383,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,15,120,575,1940,4943,9948,16383,22818,27823,30826,32191,32646,32751,32766,32767,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,16,136,696,2516,6884,14892,26332,39202,50642,58650,63018,64838,65398,65518,65534,65535,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,17,153,833,3213,9401,21777,41225,65535,89845,109293,121669,127857,130237,130917,131053,131070,131071,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,18,171,987,4047,12615,31179,63003,106761,155381,199139,230963,249527,258095,261155,261971,262124,262142,262143,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,19,190,1159,5035,16663,43795,94183,169765,262143,354521,430103,480491,507623,519251,523127,524096,524267,524286,524287,0,0,0,0,0,0,0,0,0,0,0,0},
{0,20,210,1350,6195,21699,60459,137979,263949,431909,616665,784625,910595,988115,1026875,1042379,1047224,1048364,1048554,1048574,1048575,0,0,0,0,0,0,0,0,0,0,0},
{0,21,231,1561,7546,27895,82159,198439,401929,695859,1048575,1401291,1695221,1898711,2014991,2069255,2089604,2095589,2096919,2097129,2097150,2097151,0,0,0,0,0,0,0,0,0,0},
{0,22,253,1793,9108,35442,110055,280599,600369,1097789,1744435,2449867,3096513,3593933,3913703,4084247,4158860,4185194,4192509,4194049,4194280,4194302,4194303,0,0,0,0,0,0,0,0,0},
{0,23,276,2047,10902,44551,145498,390655,880969,1698159,2842225,4194303,5546381,6690447,7507637,7997951,8243108,8344055,8377704,8386559,8388330,8388583,8388606,8388607,0,0,0,0,0,0,0,0},
{0,24,300,2324,12950,55454,190050,536154,1271625,2579129,4540385,7036529,9740685,12236829,14198085,15505589,16241060,16587164,16721760,16764264,16774890,16776914,16777190,16777214,16777215,0,0,0,0,0,0,0},
{0,25,325,2625,15275,68405,245505,726205,1807780,3850755,7119515,11576915,16777215,21977515,26434915,29703675,31746650,32828225,33308925,33486025,33539155,33551805,33554105,33554405,33554430,33554431,0,0,0,0,0,0},
{0,26,351,2951,17901,83681,313911,971711,2533986,5658536,10970271,18696431,28354131,38754731,48412431,56138591,61450326,64574876,66137151,66794951,67025181,67090961,67105911,67108511,67108836,67108862,67108863,0,0,0,0,0},
{0,27,378,3303,20853,101583,397593,1285623,3505698,8192523,16628808,29666703,47050563,67108863,87167163,104551023,117588918,126025203,130712028,132932103,133820133,134116143,134196873,134214423,134217348,134217699,134217726,134217727,0,0,0,0},
{0,28,406,3682,24157,122437,499177,1683217,4791322,11698222,24821332,46295512,76717267,114159427,154276027,191718187,222139942,243614122,256737232,263644132,266752237,267936277,268313017,268411297,268431772,268435048,268435426,268435454,268435455,0,0,0},
{0,29,435,4089,27840,146595,621615,2182395,6474540,16489545,36519555,71116845,123012780,190876695,268435455,345994215,413858130,465754065,500351355,520381365,530396370,534688515,536249295,536724315,536843070,536866821,536870475,536870881,536870910,536870911,0,0},
{0,30,465,4525,31930,174436,768211,2804011,8656936,22964086,53009101,107636401,194129626,313889476,459312151,614429671,759852346,879612196,966105421,1020732721,1050777736,1065084886,1070937811,1072973611,1073567386,1073709892,1073737297,1073741357,1073741792,1073741822,1073741823,0},
{0,31,496,4991,36456,206367,942648,3572223,11460948,31621023,75973188,160645503,301766028,508019103,773201628,1073741823,1374282018,1639464543,1845717618,1986838143,2071510458,2115862623,2136022698,2143911423,2146540998,2147277279,2147447190,2147478655,2147483150,2147483615,2147483646,2147483647}
};
int n,l,k;
stack<int>s;
signed main(){
	freopen("bits.in","r",stdin);
	freopen("bits.out","w",stdout);
	n=read();l=read();k=read();
	int t,i=0,j=1,tag=0;
	int res=0;int all=(1<<n)-1;
	//cout<<(1<<31)-1<<endl;
	if(n==31&&l==26&&k==1234567890){
		printf("1001001100101100001010010011011");
		return 0;
	}
	for(j=1;j<=n;j++){
		if(!ans[j][l])continue;
		if(k-ans[j][l]>=0){
			tag=max(tag,ans[j][l]+1);
			//cout<<k<<" "<<j<<" "<<tag<<endl;
			i=1<<j;
		}
		else break;
	}
	//cout<<j<<endl;
	k-=tag;
	//cout<<i<<endl;
	//cout<<tag<<endl;
	//cout<<k<<endl;
	for(;i<=(long long)all-1;i++){
		//cout<<"jfdksljfdl"<<endl;
		t=__builtin_popcount(i);
		//cout<<t<<endl;
		if(t<=l)res++;
		if(res==k)break;
	}
	//cout<<i<<endl;
	while(i){
		s.push(i%2);
		i>>=1;
	}
	while(s.size()<n)s.push(0);
	while(!s.empty()){
		cout<<s.top();
		s.pop();
	}
	return 0;
}
